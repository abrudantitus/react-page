import React from 'react';
import CardPresent from '../components/CardPresent';
import { NavLink, useParams } from "react-router-dom";
import TitleComponent from '../components/TitlePage';
import '../css/projects/projects.css';

const Projects = () => {

    const { id } = useParams();

    const cache = {};
    function importAll(r) { r.keys().forEach((key) => (cache[key] = r(key))); }
    importAll(require.context("../photos/projects", false, /\.(png|jpe?g|svg)$/));
    const images = { image: {}, text: [], }

    function getImages() { Object.entries(cache).forEach((module, index) => (images.image[index] = module[1].default, images.text[index] = module[0].replace("./", ""))); }
    getImages()

    const img = imgtext => { return images.image[images.text.indexOf(imgtext)]; }

    return (

        <div className="page">
            <TitleComponent title="Proiecte" />
            <ul className="filter-bar" >

                <NavLink to="/projects/all" activeClassName="active" >Toate</NavLink>
                <NavLink to="/projects/c-sharp" activeClassName="active" >C#</NavLink>
                <NavLink to="/projects/netcore" activeClassName="active" >NetCore</NavLink>
                <NavLink to="/projects/react" activeClassName="active" >React</NavLink>
                <NavLink to="/projects/arduino" activeClassName="active" >Arduino</NavLink>
                <NavLink to="/projects/postgresql" activeClassName="active" >PostgreSQL</NavLink>
                <NavLink to="/projects/mysql" activeClassName="active" >MySQL</NavLink>
               {
                   //<NavLink to="/projects/raspberrypi" activeClassName="active" >Raspberry PI</NavLink>
               } 
                <NavLink to="/projects/nodejs" activeClassName="active" >NodeJS</NavLink>
            </ul>
            <div className="cardplace">
                <CardPresent Tags="c-sharp" youtube="https://www.youtube.com/watch?v=btUiJkbsHys" selectTag={id} text="Desktop, o aplicaÈ›ie simplÄƒ de utilizat, un loc perfect de a salva shortcut-uri pentru a nu Ã®ncarcÄƒ desktop-ul windows-ului. AceastÄƒ aplicaÈ›ie oferÄƒ posibilitatea de a creia mai multe desktop-uri È™i a salva shortcut-urile dorite, practic se comportÄƒ ca dekstop-ul Windows-ului 10, shortcut-urile sunt salvate Ã®ntr-un fiÈ™ier xml, iar formatul aplicaÈ›iei este de tip executabil (exe)." mainphoto={img("desktop.png")} />
                <CardPresent Tags="c-sharp" youtube="https://www.youtube.com/watch?v=xKUfSkklsMU" selectTag={id} text="AplicaÈ›ia ajutÄƒ la trimiterea mail-urilor multiple la o anumitÄƒ datÄƒ È™i orÄƒ, È™i este posibilÄƒ ataÈ™area unor fiÈ™iere prin drag & drop. Pentru dezvoltarea aplicaÈ›iei am folosit c#, fiÈ™iere json È™i framework-ul Windows Presentation Foundation (WPF) pentru design. Formatul aplicaÈ›iei este de tip executabil (exe)." mainphoto={img("reminder.png")} />
                <CardPresent Tags="c-sharp" youtube="https://www.youtube.com/watch?v=Zud68W-0tUE&feature=youtu.be" selectTag={id} text="Shooter3D, un joc dezvoltat Ã®n cadrul facultÄƒÈ›i, constÄƒ dintr-un erou principal care trebuie sÄƒ Ã®ndeplineascÄƒ anumite misiuni prin interacÈ›iunea cu alte caractere. Pentru a dezvoltÄƒ jocul mai uÈ™or, m-am folosit de platforma Unity È™i scripturi de tip C#." mainphoto={img("shooter3D.png")} />
                <CardPresent Tags="c-sharp netcore react postgresql" youtube="https://www.youtube.com/watch?v=q-8HqnVDe9o" selectTag={id} text="Partea de Ã®nceput a licenÈ›ei, o aplicaÈ›ie de gestionare producÈ›ie, rebut, reclamaÈ›ii cu posibilitatea de facturare. Pentru a fi mai uÈ™or de utilizat, am dezvoltat o aplicaÈ›ie mobil care permite conectarea prin cod QR, scanarea codului pentru pontare cÃ¢t È™i unele rapoarte." mainphoto={img("licenta.png")} />
                <CardPresent Tags="c-sharp netcore react postgresql" youtube="https://www.youtube.com/watch?v=e5QZlFtIFGk" selectTag={id} text="DupÄƒ cum se poate observÄƒ È™i Ã®n imagine, este vorba despre o aplicaÈ›ie web pentru gestionarea produselor, Ã®n funcÈ›ie de categorie È™i oferÄƒ rapoarte de consum È™i stoc. ÃŽn dezvoltarea acestei aplicaÈ›ii am utilizat mai multe framework-uri pentru modelarea bazei de date, backend È™i frontend." mainphoto={img("virtualproducts.png")} />
                <CardPresent Tags="react" selectTag={id} text="Prima mea paginÄƒ de prezentare. ðŸ˜„" mainphoto={img("thispg.png")} />
                <CardPresent Tags="react nodejs" youtube="https://www.youtube.com/watch?v=B0ztptMTciM" selectTag={id} text="O aplicaÈ›ie web care oferÄƒ generarea È™i printarea codurilor QR Ã®n funcÈ›ie de o baza de date, am folosit fiÈ™ier access (accdb) pentru memorarea datelor." mainphoto={img("generateQR.png")} />
                <CardPresent Tags="react nodejs" youtube="https://www.youtube.com/shorts/fvEt_VLpxTY" selectTag={id} text="Scanner QR, dezvoltatÄƒ Ã®n React-Native, este o aplicaÈ›ie pentru mobil care salveazÄƒ datele angajatului Ã®ntr-o baza de date access (accdb)." mainphoto={img("nativeQR.png")} />
                <CardPresent Tags="arduino" youtube="https://www.youtube.com/watch?v=3IGSNIoXj-0" selectTag={id} text="Ceas Digital, dezvoltat Ã®n cadrul facultÄƒÈ›i, constÄƒ Ã®ntr-un meniu principal care oferÄƒ mai multe posibilitÄƒÈ›i: afiÈ™are ora, afiÈ™are datÄƒ, afiÈ™are temperatura cÃ¢t È™i setarea alarmei. DacÄƒ alarmÄƒ este declanÈ™atÄƒ va porni animaÈ›ia din imagine. Pentru a gestiona mai bine acest proiect am inserat librÄƒri din C/C++." mainphoto={img("arduino.png")} />
                <CardPresent Tags="arduino c-sharp netcore react postgresql" youtube="https://youtube.com/shorts/KtLXtx7yzCE?feature=share" selectTag={id} text="Cronometru, fiecare impuls al senzorului este Ã®nregistrat Ã®ntr-o bazÄƒ de date sub formÄƒ de datÄƒ È™i orÄƒ, iar mai apoi este creat un raport." mainphoto={img("counterArduino.png")} />
               {
               // <CardPresent Tags="raspberrypi" selectTag={id} text="Cronometru pentru angajaÈ›i, la fiecare etapÄƒ de finalizare acesta apasÄƒ butonul, timpi se salveazÄƒ Ã®ntr-un fiÈ™ier csv È™i se calculeazÄƒ dacÄƒ acesta se Ã®ncadreazÄƒ sau nu Ã®n timp Ã®n funcÈ›ie de asta, se aprinde un bec. Cronometrul conÈ›ine È™i o interfaÈ›Äƒ dezvoltatÄƒ Ã®n Python TKinter, iar identificarea angajatului se face printr-un stick." mainphoto={img("raspberrypi.png")} />
               }
                <CardPresent Tags="mysql" selectTag={id} text="Catalog Online, o aplicaÈ›ie simplÄƒ dezvoltatÄƒ Ã®n PHP, oferÄƒ gestionarea profesorilor, pÄƒrinÈ›ilor È™i a elevilor cÃ¢t È™i notele lor printr-un sistem de autentificare. Datele sunt stocate Ã®ntr-o bazÄƒ de tipul MySql." mainphoto={img("catalogonline.png")} />
            </div>
        </div >

    );

}

export default Projects